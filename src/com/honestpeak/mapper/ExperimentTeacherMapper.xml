<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honestpeak.mapper.ExperimentTeacherMapper" >
  <resultMap id="BaseResultMap" type="com.honestpeak.model.ExperimentTeacher" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="teacher_id" property="teacherId" jdbcType="BIGINT" />
    <result column="experiment_id" property="experimentId" jdbcType="BIGINT" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="term" property="term" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, teacher_id, experiment_id, year, term
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_experiment_teacher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_experiment_teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honestpeak.model.ExperimentTeacher" >
    insert into tb_experiment_teacher (id, teacher_id, experiment_id, 
      year, term)
    values (#{id,jdbcType=BIGINT}, #{teacherId,jdbcType=BIGINT}, #{experimentId,jdbcType=BIGINT}, 
      #{year,jdbcType=INTEGER}, #{term,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honestpeak.model.ExperimentTeacher" >
    insert into tb_experiment_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="experimentId != null" >
        experiment_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="term != null" >
        term,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="experimentId != null" >
        #{experimentId,jdbcType=BIGINT},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        #{term,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honestpeak.model.ExperimentTeacher" >
    update tb_experiment_teacher
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="experimentId != null" >
        experiment_id = #{experimentId,jdbcType=BIGINT},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honestpeak.model.ExperimentTeacher" >
    update tb_experiment_teacher
    set teacher_id = #{teacherId,jdbcType=BIGINT},
      experiment_id = #{experimentId,jdbcType=BIGINT},
      year = #{year,jdbcType=INTEGER},
      term = #{term,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectId" resultType="java.lang.Long">
	SELECT
	ex.id
	FROM
		`tb_experiment_teacher` ex
	LEFT JOIN tb_experiment e ON ex.experiment_id = e.id
	LEFT JOIN tb_course c ON c.id = e.course_id
	WHERE
		ex.`year` = (
			SELECT
				CASE
			WHEN MONTH (CURRENT_DATE) IN (3, 4, 5, 6, 7, 8) THEN
				YEAR (CURRENT_DATE)
			WHEN MONTH (CURRENT_DATE) IN (9, 10, 11, 12) THEN
				YEAR( DATE_ADD(CURRENT_DATE, INTERVAL 1 YEAR))
			WHEN MONTH (CURRENT_DATE) IN (1, 2) THEN
				YEAR (CURRENT_DATE)
			END AS YEAR
		)
	AND ex.term = (
		SELECT 
			CASE
		WHEN MONTH (CURRENT_DATE) IN (3, 4, 5, 6, 7, 8) THEN
			2
		WHEN MONTH (CURRENT_DATE) IN (9, 10, 11, 12, 1, 2) THEN
			1
		end as term
	)
	AND ex.teacher_id = #{userId} 
	AND c.id = #{courseId};
  </select>
  <insert id="insertET">
  	insert into tb_experiment_teacher(teacher_id,experiment_id,year,term)
  	values(#{teacherId},#{experimentId},
  		(
			SELECT
				CASE
			WHEN MONTH (CURRENT_DATE) IN (3, 4, 5, 6, 7, 8) THEN
				YEAR (CURRENT_DATE)
			WHEN MONTH (CURRENT_DATE) IN (9, 10, 11, 12) THEN
				YEAR( DATE_ADD(CURRENT_DATE, INTERVAL 1 YEAR))
			WHEN MONTH (CURRENT_DATE) IN (1, 2) THEN
				YEAR (CURRENT_DATE)
			END AS YEAR
		),
		(
			SELECT
				CASE
			WHEN MONTH (CURRENT_DATE) IN (3, 4, 5, 6, 7, 8) THEN
				2
			WHEN MONTH (CURRENT_DATE) IN (9, 10, 11, 12, 1, 2) THEN
				1
			END AS term
		)
	)
  </insert>
  <delete id="deleteByExperimentId" parameterType="java.lang.Long">
  	delete from tb_experiment_teacher where experiment_id = #{i}
  </delete>
  <select id="getEtIdByEid" parameterType="java.lang.Long" resultType="java.lang.Long">
  	select id from tb_experiment_teacher where experiment_id = #{experimentId}
  </select>
  <select id="selectIdfordesign" parameterType="java.lang.Long" resultType="java.lang.Long">
  	select id from tb_experiment_teacher where experiment_id = #{experimentId} 
  	and teacher_id = #{userId}
  </select>
  <select id="getExperimentByEid" parameterType="java.lang.Long" resultType="java.lang.Long">
  	select experiment_id from tb_experiment_teacher where id = #{EtId} 
  </select>
</mapper>