<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honestpeak.mapper.RoleMapper">
	<resultMap id="BaseResultMap" type="com.honestpeak.model.Role">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, description, status
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_role
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from tb_role
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.honestpeak.model.Role">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into tb_role (name, description, status
		)
		values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.honestpeak.model.Role">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into tb_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.honestpeak.model.Role">
		update tb_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.honestpeak.model.Role">
		update tb_role
		set name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<select id="findRolePrivilegeListByRoleId" parameterType="java.lang.Long"
		resultType="java.util.HashMap">
		SELECT
		e.id AS id,
		s.url AS url
		FROM
		tb_role r
		LEFT JOIN
		tb_role_privilege e ON r.id = e.role_id
		LEFT JOIN tb_privilege s ON
		e.privilegeId = s.id
		WHERE
		r.id = #{id}
	</select>
	<select id="findRolePage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_role
		<where>
			<if test="role.name != null">
				and name = #{role.name,jdbcType=VARCHAR}
			</if>
			<if test="role.description != null">
				and description = #{role.description,jdbcType=VARCHAR}
			</if>
			<if test="role.status != null">
				and status = #{role.status,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<select id="findPrivilegeIdListByRoleId" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		SELECT
		e.privilegeId AS id
		FROM
		tb_role r
		LEFT JOIN
		tb_role_privilege
		e ON r.id = e.role_id
		WHERE
		r.id = #{id}
	</select>
	<select id="findRolePrivilegeIdsByRoleId" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		SELECT
		e.id AS id
		FROM
		tb_role r
		LEFT JOIN
		tb_role_privilege e ON
		r.id
		= e.role_id
		WHERE
		r.id = #{id}
	</select>
	<!-- 批量删除 -->
	<delete flushCache="false" id="deleteAll" parameterType="String">
		delete from tb_role
		where id in
		<foreach close=")" collection="array" index="index" item="item"
			open="(" separator=",">
			#{item}
		</foreach>
	</delete>
	<select id="findAllRoleMap" parameterType="java.lang.Long"
		resultType="java.util.HashMap">
		SELECT id,name
		FROM
		tb_role r
		WHERE
		r.status = 1
	</select>
	<select id="findAll" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT *
		FROM
		tb_role r
		WHERE
		r.status = 1
	</select>
	<select id="getByRoleName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_role r
		WHERE r.name = #{roleName,jdbcType=VARCHAR}
		LIMIT 0,1
	</select>
</mapper>